import asyncio
import logging
import random
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import CommandStart  # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç

# –¢–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π)
TOKEN = "8019699528:AAE1LebzllSYMZxoX8X3-oEvrc8xfz9i6zQ"

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ —Ñ—Ä–∞–∑ —Å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ —Å–º–∞–π–ª–∏–∫–∞–º–∏
responses = [
    "–ï—â–µ 1 –∏ —è —Å—Ç–∞–Ω—Ü—É—é –¥–ª—è —Ç–µ–±—è —Ç–∞–Ω–µ—Ü –º–∞–ª–µ–Ω—å–∫–∏—Ö —É—Ç—è—Ç üê§",
    "–æ –¥–∞–≤–∞–π –µ—â–µ –ª–∏–¥–æ–∫, –∏ —è –ø—Ä–∏–Ω–µ—Å—É —Ç–µ–±–µ –∫–æ—Ñ–µ –≤ –ø–æ—Å—Ç–µ–ª—å, –Ω–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ üòÇ",
    "–û–ì–û–ù–¨ üî• ",
    "üî•üî•üî•",
    "–¢–∏–≥—Ä–∞ üêÖ ",
    "–¢–∞–Ω—Ü—É—é –¥–ª—è —Ç–µ–±—è –¥–∂–∏–≥—É-–¥—Ä—ã–≥—É üòè ",
    "–ë–æ–º–±–∞üí£ ",
    "–ú–æ–∂–µ—à—å –∫–æ–≥–¥–∞ –∑–∞—Ö–æ—á–µ—à—åüíâ ",
    "–ó–∞—á–µ—Ç üòé ",
    "–•—É—Ö, –Ω—É —Ö–æ—Ç—å 1 –µ—Å—Ç—å ü§• ",
    "–ú–æ—â–Ω–æ ü§© ",
    "–õ–µ–≥–µ–Ω–¥–∞ ‚ú®",
    "–û,–∑–∞—à–∏–±–∏—Å—åüòç ",
    "–†–∞–∫–µ—Ç–∞üöÄ‚Äç",
    "–í —Ç–æ–º –∂–µ –¥—É—Ö–µ –¥–æ 15 –ª–∏–¥–æ–≤üí∞ ",
    "–≠—Ç–æ –ø–æ –Ω–∞—à–µ–º—É, –≤—Å–µ –±–µ—Ä–µ–º –ø—Ä–∏–º–µ—Ä –∏ –¥–µ–ª–∞–µ–º —Ç–∞–∫ –∂–µ ‚ù§Ô∏è‚Äç",
    "–õ–æ—è–ª—å–Ω–∞—è –ø–æ–ø–∞–ª–∞—Å—å üëÄ",
    "–£—Ä–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞! ‚ù§Ô∏è‚Äç",
    "–°–¥–µ–ª–∞—é –Ω–∞ –ø–µ—Ä–µ–∫—É—Ä–µ –º–∞—Å—Å–∞–∂ –ø—è—Ç–æ–∫ ü§ù ",
    "–ï—â–µ –æ–¥–∏–Ω –∏ –∏–¥–µ–º —Å —Ç–æ–±–æ–π –≤–µ—á–µ—Ä–æ–º –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ üíç",
    "–ï—â–µ +1?‚Äçüò≥",
    "–£–º–Ω–∏—á–∫–∞ –º–æ—è üòò",
    "–ß–∏—Å—Ç–æ –ø–æ –∫—Ä–∞—Å–æ—Ç–µ! –æ–±–Ω–∏–º–∞—é, —Ü–µ–ª—É—é, –∂–º—É —Ä—É–∫—Éüòç!"
]

# –í–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
important_message = "‚ÄºÔ∏è–§–∏—Ç–æ–Ω–æ—Ä–º–∞–ª –∏ —Å–≤–∞–º–ø–≥–µ–ª—å –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞–≤–∞—Ç—å ‚ÄºÔ∏è\n\n" \
                    "3 –æ—Ñ—Ñ–µ—Ä–∞ –Ω–∞ –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –∫—É—Ä—å–µ—Ä–∞ \n\n" \
                    "‚úÖ–í–∞–ª—å–≥–æ—Ç–æ–Ω (–∫–æ—Å—Ç–æ—á–∫–∞ –Ω–∞ –Ω–æ–≥–µ)\n" \
                    "‚úÖ–í–µ–Ω–æ–ª–∏–¥ (–≤–∞—Ä–∏–∫–æ–∑)\n" \
                    "‚úÖ–ú–µ–Ω —Å–∞–π–∑ (–ø–æ—Ç–µ–Ω—Ü–∏—è)"

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
last_duplicate_time = 0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–∂–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async def duplicate_message():
    global last_duplicate_time
    while True:
        current_time = asyncio.get_event_loop().time()
        if current_time - last_duplicate_time >= 3600:  # 3600 —Å–µ–∫—É–Ω–¥ = 1 —á–∞—Å
            try:
                await bot.send_message(chat_id="-1001697395203", text=important_message)  # ID —á–∞—Ç–∞ –≤—Å—Ç–∞–≤–ª–µ–Ω –∑–¥–µ—Å—å
                last_duplicate_time = current_time
                logging.info("–í–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–æ.")
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await asyncio.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def respond(message: Message):
    if message.text in ["+1", "+2", "+1.5", "+1 –∫—É—Ä", "+1 –≥—É–º", "+1.5 –≥—É–º", "+1 –∫—Ä–æ—Å—Å"]:
        response = random.choice(responses)
        await message.reply(response)
        await message.react([types.ReactionTypeEmoji(emoji="‚ù§Ô∏è")])

@dp.message(CommandStart())  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
async def start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂. –ö–∞–∫ –¥–µ–ª–∞?")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
async def main():
    asyncio.create_task(duplicate_message())
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())


